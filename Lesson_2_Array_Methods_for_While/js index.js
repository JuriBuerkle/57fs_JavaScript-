// –ú–∞—Å—Å–∏–≤—ã
// –ú–∞—Å—Å–∏–≤ - —ç—Ç–æ —É–ø–æ—Ä—è–¥–æ—á–µ–Ω–Ω–∞—è –∫–æ–ª–ª–µ–∫—Ü–∏—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç –±—ã—Ç—å –ª—é–±–æ–≥–æ —Ç–∏–ø–∞ –¥–∞–Ω–Ω—ã—Ö (—á–∏—Å–ª–∞, —Å—Ç—Ä–æ–∫–∏, –æ–±—ä–µ–∫—Ç—ã –∏ —Ç.–¥.). –ú–∞—Å—Å–∏–≤—ã –ø–æ–∑–≤–æ–ª—è—é—Ç —Ö—Ä–∞–Ω–∏—Ç—å –∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –¥–∞–Ω–Ω—ã–µ –≤ –≤–∏–¥–µ —Å–ø–∏—Å–∫–∞. –û–Ω–∏ —è–≤–ª—è—é—Ç—Å—è –æ–¥–Ω–∏–º –∏–∑ –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ç–∏–ø–æ–≤ –¥–∞–Ω–Ω—ã—Ö –≤ JavaScript –∏ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è—é—Ç –º–Ω–æ–∂–µ—Å—Ç–≤–æ –º–µ—Ç–æ–¥–æ–≤ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏ –º–∞—Å—Å–∏–≤–∞.
//   .forEach() // –≤—ã–ø–æ–ª–Ω—è–µ—Ç —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ –º–∞—Å—Å–∏–≤–∞
//   .map() // —Å–æ–∑–¥–∞–µ—Ç –Ω–æ–≤—ã–π –º–∞—Å—Å–∏–≤, –ø—Ä–∏–º–µ–Ω—è—è —Ñ—É–Ω–∫—Ü–∏—é –∫ –∫–∞–∂–¥–æ–º—É —ç–ª–µ–º–µ–Ω—Ç—É
//   .reduce() // –ø—Ä–∏–º–µ–Ω—è–µ—Ç —Ñ—É–Ω–∫—Ü–∏—é –∫ –∞–∫–∫—É–º—É–ª—è—Ç–æ—Ä—É –∏ –∫–∞–∂–¥–æ–º—É —ç–ª–µ–º–µ–Ω—Ç—É –º–∞—Å—Å–∏–≤–∞
//   .reduceRight() // –ø—Ä–∏–º–µ–Ω—è–µ—Ç —Ñ—É–Ω–∫—Ü–∏—é –∫ –∞–∫–∫—É–º—É–ª—è—Ç–æ—Ä—É –∏ –∫–∞–∂–¥–æ–º—É —ç–ª–µ–º–µ–Ω—Ç—É –º–∞—Å—Å–∏–≤–∞ (—Å–ø—Ä–∞–≤–∞ –Ω–∞–ª–µ–≤–æ)
//   .fill() // –∑–∞–ø–æ–ª–Ω—è–µ—Ç –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã –º–∞—Å—Å–∏–≤–∞ –∑–Ω–∞—á–µ–Ω–∏–µ–º
//   .keys() // –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –Ω–æ–≤—ã–π –º–∞—Å—Å–∏–≤, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π –∫–ª—é—á–∏ (–∏–Ω–¥–µ–∫—Å—ã) —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –º–∞—Å—Å–∏–≤–∞
//   .values() // –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –Ω–æ–≤—ã–π –º–∞—Å—Å–∏–≤, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π –∑–Ω–∞—á–µ–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –º–∞—Å—Å–∏–≤–∞
//   .entries() // –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –Ω–æ–≤—ã–π –º–∞—Å—Å–∏–≤, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π –ø–∞—Ä—ã [–∫–ª—é—á, –∑–Ω–∞—á–µ–Ω–∏–µ] –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ –º–∞—Å—Å–∏–≤–∞
//   .sort() // —Å–æ—Ä—Ç–∏—Ä—É–µ—Ç —ç–ª–µ–º–µ–Ω—Ç—ã –º–∞—Å—Å–∏–≤–∞
//   .toSorted() // –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –Ω–æ–≤—ã–π –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –º–∞—Å—Å–∏–≤
//   .filter() // —Å–æ–∑–¥–∞–µ—Ç –Ω–æ–≤—ã–π –º–∞—Å—Å–∏–≤, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π —Ç–æ–ª—å–∫–æ —ç–ª–µ–º–µ–Ω—Ç—ã, —É–¥–æ–≤–ª–µ—Ç–≤–æ—Ä—è—é—â–∏–µ —É—Å–ª–æ–≤–∏—é
//   .at() // –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —ç–ª–µ–º–µ–Ω—Ç –ø–æ –∏–Ω–¥–µ–∫—Å—É, –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–µ –∏–Ω–¥–µ–∫—Å—ã
//   .find() // –Ω–∞—Ö–æ–¥–∏—Ç –ø–µ—Ä–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç, —É–¥–æ–≤–ª–µ—Ç–≤–æ—Ä—è—é—â–∏–π —É—Å–ª–æ–≤–∏—é
//   .findLast() // –Ω–∞—Ö–æ–¥–∏—Ç –ø–æ—Å–ª–µ–¥–Ω–∏–π —ç–ª–µ–º–µ–Ω—Ç, —É–¥–æ–≤–ª–µ—Ç–≤–æ—Ä—è—é—â–∏–π —É—Å–ª–æ–≤–∏—é
//   .findIndex() // –Ω–∞—Ö–æ–¥–∏—Ç –∏–Ω–¥–µ–∫—Å –ø–µ—Ä–≤–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞, —É–¥–æ–≤–ª–µ—Ç–≤–æ—Ä—è—é—â–µ–≥–æ —É—Å–ª–æ–≤–∏—é
//   .findLastIndex() // –Ω–∞—Ö–æ–¥–∏—Ç –∏–Ω–¥–µ–∫—Å –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞, —É–¥–æ–≤–ª–µ—Ç–≤–æ—Ä—è—é—â–µ–≥–æ —É—Å–ª–æ–≤–∏—é
//   .flat() // –æ–±—ä–µ–¥–∏–Ω—è–µ—Ç –º–∞—Å—Å–∏–≤—ã –∏ –ø—Ä–∏–º–µ–Ω—è–µ—Ç —Ñ—É–Ω–∫—Ü–∏—é –∫ –∫–∞–∂–¥–æ–º—É —ç–ª–µ–º–µ–Ω—Ç—É
//   .flatMap() // –æ–±—ä–µ–¥–∏–Ω—è–µ—Ç –º–∞—Å—Å–∏–≤—ã –∏ –ø—Ä–∏–º–µ–Ω—è–µ—Ç —Ñ—É–Ω–∫—Ü–∏—é –∫ –∫–∞–∂–¥–æ–º—É —ç–ª–µ–º–µ–Ω—Ç—É
//   .every() // –ø—Ä–æ–≤–µ—Ä—è–µ—Ç, —É–¥–æ–≤–ª–µ—Ç–≤–æ—Ä—è—é—Ç –ª–∏ –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã –º–∞—Å—Å–∏–≤–∞ —É—Å–ª–æ–≤–∏—é
//   .some() // –ø—Ä–æ–≤–µ—Ä—è–µ—Ç, —É–¥–æ–≤–ª–µ—Ç–≤–æ—Ä—è—é—Ç –ª–∏ –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã –º–∞—Å—Å–∏–≤–∞ —É—Å–ª–æ–≤–∏—é
//   .reverse() // –ø–µ—Ä–µ–≤–æ—Ä–∞—á–∏–≤–∞–µ—Ç –º–∞—Å—Å–∏–≤
//   .includes() // –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ —ç–ª–µ–º–µ–Ω—Ç–∞ –≤ –º–∞—Å—Å–∏–≤–µ
//   .indexOf() // –Ω–∞—Ö–æ–¥–∏—Ç –∏–Ω–¥–µ–∫—Å —ç–ª–µ–º–µ–Ω—Ç–∞ –≤ –º–∞—Å—Å–∏–≤–µ
//   .lastIndexOf() // –Ω–∞—Ö–æ–¥–∏—Ç –∏–Ω–¥–µ–∫—Å —ç–ª–µ–º–µ–Ω—Ç–∞ –≤ –º–∞—Å—Å–∏–≤–µ
//   .push() // –¥–æ–±–∞–≤–ª—è–µ—Ç —ç–ª–µ–º–µ–Ω—Ç –≤ –∫–æ–Ω–µ—Ü –º–∞—Å—Å–∏–≤–∞
//   .pop() // —É–¥–∞–ª—è–µ—Ç –ø–æ—Å–ª–µ–¥–Ω–∏–π —ç–ª–µ–º–µ–Ω—Ç –º–∞—Å—Å–∏–≤–∞
//   .shift() // —É–¥–∞–ª—è–µ—Ç –ø–µ—Ä–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç –º–∞—Å—Å–∏–≤–∞
//   .unshift() // –¥–æ–±–∞–≤–ª—è–µ—Ç —ç–ª–µ–º–µ–Ω—Ç –≤ –Ω–∞—á–∞–ª–æ –º–∞—Å—Å–∏–≤–∞
//   .slice() // –∫–æ–ø–∏—Ä—É–µ—Ç —á–∞—Å—Ç—å –º–∞—Å—Å–∏–≤–∞
//   .splice() // —É–¥–∞–ª—è–µ—Ç —ç–ª–µ–º–µ–Ω—Ç—ã –∏–∑ –º–∞—Å—Å–∏–≤–∞
//   .with() // –∫–æ–ø–∏—Ä—É–µ—Ç –º–∞—Å—Å–∏–≤ –∏ –¥–æ–±–∞–≤–ª—è–µ—Ç –Ω–æ–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç
//   .toSpliced() // –∫–æ–ø–∏—Ä—É–µ—Ç –º–∞—Å—Å–∏–≤ –∏ —É–¥–∞–ª—è–µ—Ç —ç–ª–µ–º–µ–Ω—Ç—ã
//   .copyWithin() // –∫–æ–ø–∏—Ä—É–µ—Ç —ç–ª–µ–º–µ–Ω—Ç—ã –≤–Ω—É—Ç—Ä–∏ –º–∞—Å—Å–∏–≤–∞
// Array.from(); // —Å–æ–∑–¥–∞–µ—Ç –Ω–æ–≤—ã–π –º–∞—Å—Å–∏–≤ –∏–∑ –º–∞—Å—Å–∏–≤–æ–ø–æ–¥–æ–±–Ω–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞
// Array.of() // —Å–æ–∑–¥–∞–µ—Ç –Ω–æ–≤—ã–π –º–∞—Å—Å–∏–≤ –∏–∑ –ø–µ—Ä–µ–¥–∞–Ω–Ω—ã—Ö –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
// .concat() // –æ–±—ä–µ–¥–∏–Ω—è–µ—Ç –º–∞—Å—Å–∏–≤—ã –≤ –æ–¥–∏–Ω
// .join() // –æ–±—ä–µ–¥–∏–Ω—è–µ—Ç –º–∞—Å—Å–∏–≤—ã –≤ –æ–¥–∏–Ω
// .toReversed() // –∫–æ–ø–∏—Ä—É–µ—Ç –º–∞—Å—Å–∏–≤ –∏ –ø–µ—Ä–µ–≤–æ—Ä–∞—á–∏–≤–∞–µ—Ç –µ–≥–æ
// .toSpliced() // –∫–æ–ø–∏—Ä—É–µ—Ç –º–∞—Å—Å–∏–≤ –∏ —É–¥–∞–ª—è–µ—Ç —ç–ª–µ–º–µ–Ω—Ç—ã
// .toString() // –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç –º–∞—Å—Å–∏–≤ –≤ —Å—Ç—Ä–æ–∫—É
// .toLocaleString(); // –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç –º–∞—Å—Å–∏–≤ –≤ —Å—Ç—Ä–æ–∫—É —Å —É—á–µ—Ç–æ–º –ª–æ–∫–∞–ª–∏
// Array.isArray(); // –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –º–∞—Å—Å–∏–≤

// ! arrays - –º–∞—Å—Å–∏–≤—ã
// —Å–ª–æ–∂–Ω—ã–π —Ç–∏–ø –¥–∞–Ω–Ω—ã—Ö, –∫–æ—Ç–æ—Ä—ã–π —Ö–æ—Ä–æ—à–æ –ø–æ–¥—Ö–æ–¥–∏—Ç –ø–æ–¥ –ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω–∏–µ —á–µ–≥–æ-—Ç–æ —Å –æ–¥–∏–Ω–∞–∫–æ–≤—ã–º –Ω–∞–±–æ—Ä–æ–º —Å–≤–æ–π—Å—Ç–≤

const { reversArray } = require("../HomeWork_2/js index");

// * —Å–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –º–∞—Å—Å–∏–≤–∞

const arr = [];

const numbers = [4, 8, 15, 16, 23, 42];
const fruits = ["apple", "orange", "pear"];

// * –æ–±—Ä–∞—â–µ–Ω–∏–µ –∫ —ç–ª–µ–º–µ–Ω—Ç—É –º–∞—Å—Å–∏–≤–∞

const pear = fruits[2];
console.log(numbers);

// –µ—Å–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç—Å—è –∫ –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–µ–º—É –∏–Ω–¥–µ–∫—Å—É –±—É–¥–µ—Ç undefined

const none = fruits[4];

// –º—ã –º–æ–∂–µ–º —Å–æ–∑–¥–∞–≤–∞—Ç—å –º–∞—Å—Å–∏–≤—ã –∏–∑ —Ä–∞–∑–Ω—ã—Ö —Ç–∏–ø–æ–≤ –¥–∞–Ω–Ω—ã—Ö
// –Ω–æ! –∫–∞–∫ –ø—Ä–∞–≤–∏–ª–æ —ç—Ç–æ –Ω–µ –Ω—É–∂–Ω–æ –∏ –Ω–µ —É–¥–æ–±–Ω–æ ü´£

const party = ["alien", 42, undefined, ["ü™ê", "üë®‚ÄçüöÄ"]];

// ! —Ü–∏–∫–ª for - for loop

//for (–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è; —É—Å–ª–æ–≤–∏–µ; –∑–∞–≤–µ—Ä—à–∞—é—â–∞—è –æ–ø–µ—Ä–∞—Ü–∏—è) {
// –¢–µ–ª–æ —Ü–∏–∫–ª–∞
//}

for (let i = 0; i < numbers.length; i++) {
  // –ø–µ—Ä–µ–±–∏—Ä–∞–µ–º –º–∞—Å—Å–∏–≤ –æ—Ç 0 –¥–æ –¥–ª–∏–Ω—ã –º–∞—Å—Å–∏–≤–∞
  // i - —ç—Ç–æ –∏–Ω–¥–µ–∫—Å —ç–ª–µ–º–µ–Ω—Ç–∞ –≤ –º–∞—Å—Å–∏–≤–µ
  console.log(i + 1 + "–π —ç–ª–µ–º–µ–Ω—Ç: " + numbers[i]);
}

// ! —Ü–∏–∫–ª while - while loop

let i = 0;

while (i < 3) {
  console.log(i + 1 + " —Ä–∞–∑");
  i++;
}

// ! –º–µ—Ç–æ–¥—ã –º–∞—Å—Å–∏–≤–æ–≤ - array methods

// —Ñ—É–Ω–∫—Ü–∏–∏ –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–∑–≤–æ–ª—è—é—Ç —Å–æ–≤–µ—Ä—à–∞—Ç—å –æ—Å–Ω–æ–≤–Ω—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ —Å –º–∞—Å—Å–∏–≤–∞–º–∏

// * –≤—Å–µ –º–µ—Ç–æ–¥—ã –¥–µ–ª—è—Ç—Å—è –Ω–∞ –º—É—Ç–∏—Ä—É—é—â–∏–µ –∏ –Ω–µ –º—É—Ç–∏—Ä—É—é—â–∏–π

// 1. –º—É—Ç–∏—Ä—É—é—â–∏–µ - –∏–∑–º–µ–Ω—è—é—Ç –∏—Å—Ö–æ–¥–Ω—ã–π –º–∞—Å—Å–∏–≤
// 2. –Ω–µ –º—É—Ç–∏—Ä—É—é—â–∏–µ - –Ω–µ –∏–∑–º–µ–Ω—è—é—Ç –∏—Å—Ö–æ–¥–Ω—ã–π –º–∞—Å—Å–∏–≤

const animals = ["panda", "otter", "rabbit", "racoon"];

// * push() - –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–∞ –≤ –∫–æ–Ω–µ—Ü –º–∞—Å—Å–∏–≤–∞

// –º–µ—Ç–æ–¥ –º—É—Ç–∏—Ä—É—é—â–∏–π
// –∏–∑–º–µ–Ω—è–µ—Ç –∏—Å—Ö–æ–¥–Ω—ã–π –º–∞—Å—Å–∏–≤
// –≤–æ–∑–≤—Ä–∞—â–µ–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ - –¥–ª–∏–Ω–Ω–∞ –Ω–æ–≤–æ–≥–æ –º–∞—Å—Å–∏–≤–∞

animals.push("tiger");
animals.push("cow");

// ! animals = ['owl', 'frog'] - –Ω–µ–ª—å–∑—è –ø–µ—Ä–µ–∑–∞–ø–∏—Å—ã–≤–∞—Ç—å –∫–æ–Ω—Å—Ç–∞–Ω—Ç—É
// –Ω–æ –º–æ–∂–Ω–æ –∏–∑–º–µ–Ω—è—Ç—å —ç–ª–µ–º–µ–Ω—Ç—ã –≤–Ω—É—Ç—Ä–∏ —Ç–∞–∫–æ–≥–æ –º–∞—Å—Å–∏–≤–∞

console.log(animals);

const newArrLength = animals.push("owl"); // –≤–µ—Ä–Ω–µ—Ç –Ω–µ –Ω–æ–≤—ã–π –º–∞—Å—Å–∏–≤, –∞ –∫–æ–ª-–≤–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –ø–æ—Å–ª–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è

console.log(animals);

console.log(newArrLength);

// * unshift() - –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–∞ –≤ –Ω–∞—á–∞–ª–æ –º–∞—Å—Å–∏–≤–∞

// –º–µ—Ç–æ–¥ –º—É—Ç–∏—Ä—É—é—â–∏–π
// –∏–∑–º–µ–Ω—è–µ—Ç –∏—Å—Ö–æ–¥–Ω—ã–π –º–∞—Å—Å–∏–≤
// –≤–æ–∑–≤—Ä–∞—â–µ–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ - –¥–ª–∏–Ω–Ω–∞ –Ω–æ–≤–æ–≥–æ –º–∞—Å—Å–∏–≤–∞

animals.unshift("lion");

console.log(animals);

// * pop() - —É–¥–∞–ª–µ–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–∞ –∏–∑ –∫–æ–Ω—Ü–∞ –º–∞—Å—Å–∏–≤–∞

// –º–µ—Ç–æ–¥ –º—É—Ç–∏—Ä—É—é—â–∏–π
// –∏–∑–º–µ–Ω—è–µ—Ç –∏—Å—Ö–æ–¥–Ω—ã–π –º–∞—Å—Å–∏–≤
// –≤–æ–∑–≤—Ä–∞—â–µ–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ - —É–¥–∞–ª–µ–Ω–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç

const value = animals.pop(); // –º–∞—Å—Å–∏–≤ –∏–∑–º–µ–Ω–∏—Ç—Å—è, –∞ –≤ value –æ–∫–∞–∂–µ—Ç—Å—è —É–¥–∞–ª–µ–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ

console.log(value);

console.log(animals);

// * shift() - —É–¥–∞–ª–µ–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–∞ –∏–∑ –Ω–∞—á–∞–ª–∞ –º–∞—Å—Å–∏–≤–∞

// –º–µ—Ç–æ–¥ –º—É—Ç–∏—Ä—É—é—â–∏–π
// –∏–∑–º–µ–Ω—è–µ—Ç –∏—Å—Ö–æ–¥–Ω—ã–π –º–∞—Å—Å–∏–≤
// –≤–æ–∑–≤—Ä–∞—â–µ–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ - —É–¥–∞–ª–µ–Ω–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç

animals.shift();

console.log(animals);

// ! spread syntax

// –æ–¥–∏–Ω –∏–∑ —Å–ø–æ—Å–æ–±–æ–≤ —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å –º–∞—Å—Å–∏–≤
// –∏—Å–ø–æ–ª—å–∑—É–µ–º '...' –ø–µ—Ä–µ–¥ –∏–º–µ–Ω–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π —Å –∏—Å—Ö–æ–¥–Ω—ã–º –º–∞—Å—Å–∏–≤–æ–º

const newAnimals = [...animals];

newAnimals.push("new hippo"); // –¥–æ–±–∞–≤–∏–ª–∏ —ç–ª–µ–º–µ–Ω—Ç –≤ –Ω–æ–≤—ã–π –º–∞—Å—Å–∏–≤

// console.log(newAnimals)
// console.log(animals)

const fruitsAndAnimals = [...fruits, ...animals]; // –æ–±—ä–µ–¥–∏–Ω–∏–ª–∏ –¥–≤–∞ –º–∞—Å—Å–∏–≤–∞ –≤ –æ–¥–∏–Ω üçπ

fruitsAndAnimals.unshift("kiwi"); // –ø—Ä–∞–∫—Ç–∏–∫—É–µ–º –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ ü•ù

// console.log(fruitsAndAnimals)

const fruitsAndNumbers = [
  [...fruits, "melon"],
  [...numbers, 777],
];

// console.log(fruitsAndNumbers[0][3]) // –Ω–∞—Ö–æ–¥–∏–º —ç–ª–µ–º–µ–Ω—Ç –≤–Ω—É—Ç—Ä–∏ –≤–ª–æ–∂–µ–Ω–Ω–æ–≥–æ –º–∞—Å—Å–∏–≤–∞

// ! –ø–µ—Ä–µ–∑–∞–ø–∏—Å—å –ø–æ –∏–Ω–¥–µ–∫—Å—É

fruitsAndAnimals[2] = "grapefruit"; // –æ–±—Ä–∞—â–∞–µ–º—Å—è –∏ –ø–µ—Ä–µ–∑–∞–ø–∏—Å—ã–≤–∞–µ–º

// console.log(fruitsAndAnimals)

// ! –∑–∞–±—Ä–∞—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–π —ç–ª–µ–º–µ–Ω—Ç –∏–∑ –º–∞—Å—Å–∏–≤–∞

fruitsAndAnimals[fruitsAndAnimals.length - 1];

// ! –¥–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏–∑–∞—Ü–∏—è –º–∞—Å—Å–∏–≤–æ–≤
/*- —ç—Ç–æ —Å–∏–Ω—Ç–∞–∫—Å–∏—á–µ—Å–∫–∞—è –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏—è, –ø–æ–∑–≤–æ–ª—è—é—â–∞—è –∏–∑–≤–ª–µ–∫–∞—Ç—å –¥–∞–Ω–Ω—ã–µ –∏–∑ –º–∞—Å—Å–∏–≤–æ–≤ –∏–ª–∏ –æ–±—ä–µ–∫—Ç–æ–≤ –∏ –ø—Ä–∏—Å–≤–∞–∏–≤–∞—Ç—å –∏—Ö –æ—Ç–¥–µ–ª—å–Ω—ã–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º. –ü—Ä–æ—â–µ –≥–æ–≤–æ—Ä—è, —ç—Ç–æ —Å–ø–æ—Å–æ–± "—Ä–∞—Å–ø–∞–∫–æ–≤–∞—Ç—å" –∑–Ω–∞—á–µ–Ω–∏—è –∏–∑ —Å–ª–æ–∂–Ω–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–∞–Ω–Ω—ã—Ö (–º–∞—Å—Å–∏–≤–∞ –∏–ª–∏ –æ–±—ä–µ–∫—Ç–∞) –∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∏—Ö –∫–∞–∫ –æ—Ç–¥–µ–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ, —á—Ç–æ –¥–µ–ª–∞–µ—Ç –∫–æ–¥ –±–æ–ª–µ–µ —á–∏—Ç–∞–µ–º—ã–º –∏ –ª–∞–∫–æ–Ω–∏—á–Ω—ã–º*/

// —ç—Ç–æ —Å–ø–æ—Å–æ–± –≤ –æ–¥–Ω—É —Å—Ç—Ä–æ–∫—É:
// –æ–±—ä—è–≤–∏—Ç—å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
// –∑–∞–±—Ä–∞—Ç—å –∑–Ω–∞—á–µ–Ω–∏—è –∏–∑ –∏—Å—Ö–æ–¥–Ω–æ–≥–æ –º–∞—Å—Å–∏–≤–∞
// –ø—Ä–∏—Å–≤–æ–∏—Ç—å –∏—Ö –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ

const cities = ["Berlin", "Munich", "Hamburg", "Leipzig"];

// * —Ä–µ—à–µ–Ω–∏–µ –±–µ–∑ –¥–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏–∑–∞—Ü–∏–∏

// const berlin = cities[0];
// const munich = cities[1];
// const hamburg = cities[2];
// const leipzig = cities[3];

// * —Ç–∞ –∂–µ –∑–∞–¥–∞—á–∞ —Å –¥–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏–∑–∞—Ü–∏–µ–π

const [city1, munich, , leipzig] = cities; // –Ω–µ–Ω—É–∂–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –ø—Ä–æ–ø—É—Å–∫–∞–µ–º

console.log(city1, munich, leipzig);
console.log(reversArray);

// const newArr = [...cities, cities[2]] - –¥–æ–ø–∏—Å–∞–ª–∏ –Ω–æ–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç –≤ –º–∞—Å—Å–∏–≤
